From 094443e3953413b45d1a7cf121643effd2b02fce Mon Sep 17 00:00:00 2001
From: Nicholas McKibben <nicholas.bgp@gmail.com>
Date: Tue, 28 Dec 2021 14:19:53 -0700
Subject: [PATCH 2/3] DEBUG: Carry scipy#15249

FIX: add G77 wrappers to PROPACK build

BLD: point PROPACK to fork branch temporarily

FIX: linting and setup.py fixes

BLD: only use G77 PROPACK wrappers if needs_g77_abi_wrapper

FIX: _is_32bit() logical error fix; compile without optimizations for 32 bit to solve some problems

FIX: lapack info clobber removed

BLD: back to scipy propack; adjustments for 32-bit build

BLD: update submodule to newest PROPACK revision
---
 scipy/sparse/linalg/_propack/setup.py | 67 ++++++++++++++++++---------
 1 file changed, 45 insertions(+), 22 deletions(-)

diff --git a/scipy/sparse/linalg/_propack/setup.py b/scipy/sparse/linalg/_propack/setup.py
index 76b6f0696..de02e7354 100644
--- a/scipy/sparse/linalg/_propack/setup.py
+++ b/scipy/sparse/linalg/_propack/setup.py
@@ -17,15 +17,32 @@ def check_propack_submodule():
 def configuration(parent_package='', top_path=None):
     from numpy.distutils.system_info import get_info, NotFoundError
     from numpy.distutils.misc_util import Configuration
-    config = Configuration('_propack', parent_package, top_path)
-    lapack_opt = get_info('lapack_opt')
+    from scipy._build_utils import (gfortran_legacy_flag_hook,
+                                    blas_ilp64_pre_build_hook,
+                                    get_f2py_int64_options,
+                                    get_g77_abi_wrappers,
+                                    uses_blas64,
+                                    needs_g77_abi_wrapper)
+
+    if uses_blas64():
+        lapack_opt = get_info('lapack_ilp64_opt', 2)
+        pre_build_hook = (gfortran_legacy_flag_hook,
+                          blas_ilp64_pre_build_hook(lapack_opt))
+        f2py_options = get_f2py_int64_options()
+    else:
+        lapack_opt = get_info('lapack_opt')
+        pre_build_hook = gfortran_legacy_flag_hook
+        f2py_options = None
+
     if not lapack_opt:
         raise NotFoundError('no lapack/blas resources found')
 
+    config = Configuration('_propack', parent_package, top_path)
+
     #  ------------------------------------------------------------
     #  Set up the libraries.
     #  We need a different python extension file for each, because
-    #  names resue between functions in the LAPACK extensions.  This
+    #  names reuse between functions in the LAPACK extensions.  This
     #  could probably be remedied with some work.
     #  NOTES: this might not longer apply now that we build without
     #         LAPACK extensions
@@ -38,30 +55,36 @@ def configuration(parent_package='', top_path=None):
     for prefix, directory in type_dict.items():
         propack_lib = f'_{prefix}propack'
 
-        # Need to use risc implementation for 32-bit machines
-        if _is_32bit:
-            src = list((pathlib.Path(
-                __file__).parent / 'PROPACK' / directory).glob('*.F'))
+        # Use risc msg implementation for 64-bit machines, pentium for 32-bit
+        src = list((pathlib.Path(
+            __file__).parent / 'PROPACK' / directory).glob('*.F'))
+        if _is_32bit():
+            # don't ask me why, 32-bit blows up without second.F
             src = [str(p) for p in src if 'risc' not in str(p)]
         else:
-            src = join('PROPACK', directory, '*.F')
+            src = [str(p) for p in src
+                   if 'pentium' not in str(p) and 'second' not in str(p)]
+
+        if not _is_32bit():
+            # don't ask me why, 32-bit blows up with this wrapper
+            src += get_g77_abi_wrappers(lapack_opt)
+
+        cmacros = [('_OPENMP',)]
+        if needs_g77_abi_wrapper(lapack_opt):
+            cmacros += [('SCIPY_USE_G77_CDOTC_WRAP', 1)]
 
         config.add_library(propack_lib,
                            sources=src,
-                           macros=[('_OPENMP',)])
-        config.add_extension(f'_{prefix}propack',
-                             sources=f'{prefix}propack.pyf',
-                             libraries=[propack_lib],
-                             extra_info=lapack_opt,
-                             undef_macros=['_OPENMP'])
-
-        # add required data files to run example matrix tests
-        path_list = ['PROPACK', directory, 'Examples']
-        config.add_data_files('.', join(*path_list, '*.coord'))
-        config.add_data_files('.', join(*path_list, '*.diag'))
-        config.add_data_files('.', join(*path_list, '*.rra'))
-        config.add_data_files('.', join(*path_list, '*.cua'))
-        config.add_data_files('.', join(*path_list, 'Output', '*.ascii'))
+                           macros=cmacros,
+                           depends=['setup.py'])
+        ext = config.add_extension(f'_{prefix}propack',
+                                   sources=f'{prefix}propack.pyf',
+                                   libraries=[propack_lib],
+                                   extra_info=lapack_opt,
+                                   undef_macros=['_OPENMP'],
+                                   f2py_options=f2py_options,
+                                   depends=['setup.py'] + src)
+        ext._pre_build_hook = pre_build_hook
 
     return config
 
-- 
2.32.0.windows.2


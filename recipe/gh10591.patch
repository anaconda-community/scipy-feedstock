From 1334bfea6d631ff1d79978e8bd3099ea5fe8babb Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Fri, 9 Aug 2019 16:08:09 -0500
Subject: [PATCH] ENH: Add an env variable SCIPY_USE_G77_ABI_WRAPPER (#10591)

When automatically switching the underlying BLAS layer, scipy doesn't
know whether the BLAS implementation use g77 ABI or not. With this
environment variable, a user can tell scipy to always assume g77 ABI
and use the cblas_* functions.
---
 doc/source/building/linux.rst  | 20 ++++++++++++++++++++
 scipy/_build_utils/_fortran.py |  7 +++++--
 2 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/doc/source/building/linux.rst b/doc/source/building/linux.rst
index 9d7c21c1b2f..9dcab80dfc6 100644
--- a/doc/source/building/linux.rst
+++ b/doc/source/building/linux.rst
@@ -186,3 +186,23 @@ If you build NumPy for ia32 bit platforms:
 ::
 
    $export LD_LIBRARY_PATH=/opt/intel/composer_xe_2013/mkl/lib/ia32: /opt/intel/composer_xe_2013/compiler/lib/ia32:$LD_LIBRARY_PATH
+
+
+====================
+Fortran ABI mismatch
+====================
+
+Some linear algebra libraries are built with G77 ABI and others with
+GFortran ABI and these two ABIs are incompatible. Therefore if you
+build scipy with `gfortran` and link to a linear algebra library like
+MKL which is built with G77 ABI then there'll be an exception or a
+segfault. SciPy fixes this by using the CBLAS API for the few
+functions in the BLAS API that suffers from this issue.
+
+Note that SciPy needs to know at build time, what needs to be done and
+the build system will automatically check whether linear algebra
+library is MKL and if so use the CBLAS API instead of the BLAS API.
+If autodetection fails or if the user wants to override this
+autodetection mechanism, setting the environment variable
+`SCIPY_USE_G77_ABI_WRAPPER` to 0 or 1 to disable or enable using CBLAS
+API.
diff --git a/scipy/_build_utils/_fortran.py b/scipy/_build_utils/_fortran.py
index 8bb5fc97bcf..804bd71efc1 100644
--- a/scipy/_build_utils/_fortran.py
+++ b/scipy/_build_utils/_fortran.py
@@ -20,8 +20,11 @@ def uses_mkl(info):
 
 def needs_g77_abi_wrapper(info):
     """Returns True if g77 ABI wrapper must be used."""
-    return uses_mkl(info)
-
+    try:
+        needs_wrapper = int(os.environ["SCIPY_USE_G77_ABI_WRAPPER"]) != 0
+    except KeyError:
+        needs_wrapper = uses_mkl(info)
+    return needs_wrapper
 
 def get_g77_abi_wrappers(info):
     """
